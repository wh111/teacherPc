<!--
****--@file     questions_toChannel
****--@date     2017/12/7 上午1:45
****--@author   jhd
****--@describe   试题导入
-->
<template>

  <div class="questions_toChannel">
      <el-row class="but-spaceone">
          <el-col :span="3" :offset="2" style="margin-top: -3px;">
              <Icon style="font-size: 50px;margin: 10px 0 0 5px;" type="arrow-down-a"/>
          </el-col>
          <el-col :span="16">
              <p class="line">下载试题导入包</p>
              <a :href="resourceHttp +'/template/试题导入包模板.zip\n'">
                  <el-button size="mini" type="primary">点击下载<i class="ivu-icon ivu-icon-arrow-down-a"></i></el-button>
               </a>
          </el-col>
      </el-row>
       <br/>
        <el-row class="but-space">
      <el-col :span="3" :offset="2" style="margin-top: 14px;">
        <Icon style="font-size: 50px;margin: 0 0 0 2px;" type="upload"/>
      </el-col>
      <el-col :span="16" style="margin-top: 16px;">
        <el-upload
                class="upload-demo"
                action="/api/teacher/question/import"
                :on-preview="handlePreview"
                :on-remove="handleRemove"
                :on-success="handleAvatarSuccess"
                :before-upload="beforeAvatarUpload"
                :before-remove="beforeRemove"
                multiple
                :on-exceed="handleExceed"
                :file-list="fileList">
          <el-button size="small" type="primary" style="padding: 7px 15px;">点击上传</el-button>
          <div slot="tip" class="linebot">只能上传zip文件</div>
        </el-upload>

      </el-col>
    </el-row>

    <!--<el-row class="but-space">-->
    <!--<el-col :span="3" :offset="2">-->
    <!--<Icon style="font-size: 50px" type="arrow-down-a"/>-->
    <!--</el-col>-->
    <!--<el-col :span="16">-->
    <!--<p>填写导入试题的信息</p></br>-->
    <!--<a :href="resourceHttp +'/template/试题导入模板.xls'">-->
    <!--<el-button size="mini" type="primary">下载模板<i class="ivu-icon ivu-icon-arrow-down-a"></i></el-button>-->
    <!--</a>-->
    <!--</el-col>-->
    <!--</el-row>-->
    <!--<el-row class="but-space">-->
    <!--<el-col :span="3" :offset="2">-->
    <!--<Icon style="font-size: 50px" type="upload"/>-->
    <!--</el-col>-->
    <!--<el-col :span="16">-->
    <!--<p>上传填好的试题信息 ( 仅支持.xls/.xlsx格式)</p></br>-->
    <!--<xlsx @on-select-file="handleSelectedFile" :row="2">上传</xlsx>-->

    <!--</el-col>-->
    <!--</el-row>-->
    <!--<el-row class="but-space">-->
    <!--<el-col :span="18" :offset="5">-->
    <!--<p>本次已导入记录数 : {{totalNumber}}条</p>-->
    <!--</el-col>-->
    <!--</el-row>-->

    <!--<el-row class="but-space">-->
    <!--<el-col :span="10" :offset="9">-->
    <!--<el-button @click="success" class="search-btn">完成</el-button>-->
    <!--<el-button @click="cancel" class="tableMakeItemCancel">取消</el-button>-->
    <!--</el-col>-->
    <!--</el-row>-->

    <!--导入-->
    <!--<Modal-->
    <!--close-on-click-modal="false"-->
    <!--width="1100"-->
    <!--v-model="toChannelModal"-->
    <!--title="对话框标题"-->
    <!--class-name="vertical-center-modal">-->
    <!--<modal-header slot="header" :content="toChannelId"></modal-header>-->
    <!--<to-channel v-if="toChannelModal" @cancel="closeChannel" :url="'/questions/import'" @success="subHandelEvent"-->
    <!--:data="convertedData" :ch2en="ch2en" :format="format"></to-channel>-->
    <!--<div slot="footer"></div>-->
    <!--</Modal>-->
  </div>
</template>
<script>

  //当前组件引入全局的util
  let Util = null
  export default {
    //props接收父组件传递过来的数据
    props: ['operailityData', 'deptId'],
    data () {
      return {
        fileList: [],
        active: 0,
        //保存按钮基本信息
        resourceHttp: '',
        ch2en: {
          grade: {
            '一年级': '1',
            '二年级': '2',
            '三年级': '3',
            '四年级': '4',
            '五年级': '5',
            '六年级': '6',
            '七年级': '7',
            '八年级': '8',
            '九年级': '9',
            '高一': '10',
            '高二': '11',
            '高三': '12',
          },
          term: {
            '上学期': '0',
            '下学期': '1',
          },
        },
        //导入条件
        loadBtn: {title: '提交', callParEvent: 'listenSubEvent'},
        toChannelId: {id: 'toChannelId1', title: '人员信息表'},
        convertedData: {},
        format: {
          '年级': 'grade',
          '科目': 'subject',
          '学期': 'term',
          '知识点': 'knowledges',
          '难度': 'diffLevelCode',
          '题型': 'questionsTypeName',
          '分数': 'score',
          '题目内容': 'title',
          '可选项': 'questionsOptions',
          '答案': 'answer',
          '答案解析': 'answerExplain',
          '是否为题干': 'isMain',
          '基本题型': 'basicType',
        },

        //记录总条数
        totalNumber: 0,
        toChannelModal: false,
        //form表单bind数据
        formValidate: {
          name: '',
          identify: null,
          remark: '',
          type: [],
        },

        //当前组件提交(add)数据时,ajax处理的 基础信息设置
        addMessTitle: {
          type: 'add',
          successTitle: '添加成功!',
          errorTitle: '添加失败!',
          ajaxSuccess: 'ajaxSuccess',
          ajaxError: 'ajaxError',
          ajaxParams: {
            url: '/questions/import',
            method: 'post',
          },
        },
        //table
        dynamicHt: 100,
        tableData1: [{l: '1'}, {l: '1'}],
//        http:'',
      }
    },
    created () {
      //给当前组件注入全局util
      Util = this.$util
    },
    mounted () {
      //初始化
//      let http = this.$store.getters.getEnvPath.http;
//      this.http = http+ 'static/template/部门人员信息模板-普通人员.xls';
      this.init()
      this.resourceHttp = this.$store.getters['app/envs']('resourceHttp')
    },
    methods: {
      handleAvatarSuccess (res) {
        if(res.status.code!=0){
          this.errorMess(res.status.msg)
        }else {
          this.successMess('上传成功')
        }
        this.success()
      },
      beforeAvatarUpload (file) {
        console.log(file)
        console.log(file.type.split('/')[file.type.split('/').length-1].indexOf('zip')==-1)
        if (file.name.split('.')[file.name.split('.').length-1]!='zip') {
          this.errorMess('请上传zip压缩文件')
          return false
        }
      },

      handleRemove (file, fileList) {
        console.log(file, fileList)
      },
      handlePreview (file) {
        console.log(file)
      },
      handleExceed (files, fileList) {
//                this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
      },
      beforeRemove (file, fileList) {
        return this.$confirm(`确定移除 ${ file.name }？`)
      },
      /*
       * 组件初始化入口
       * */
      init () {
        //默认请求加载数据

      },
      /*
       * 点击提交按钮 监听是否提交数据
       * @param isLoadingFun boolean  form表单验证是否通过
       * */
      listenSubEvent (isLoadingFun) {
        let isSubmit = this.submitForm('formValidate')
        if (isSubmit) {
          if (!isLoadingFun) isLoadingFun = function () {
          }
          isLoadingFun(true)
          this.addMessTitle.ajaxParams.data = this.getFormData(this.formValidate)
          this.ajax(this.addMessTitle, isLoadingFun)
        }
      },
      /*
       * 点击提交按钮 监听是否验证通过
       * @param formName string  form表单v-model数据对象名称
       * @return flag boolean   form表单验证是否通过
       * */
      submitForm (formName) {
        let flag = false
        this.$refs[formName].validate((valid) => {
          if (valid) {
            flag = true
          }
        })
        return flag
      },

      /*
       * 当前组件发送事件给父组件
       * 发送关闭(cancel)模态事件给父组件,请求关闭当前模态窗
       * */
      success () {
        this.$emit('toChannel', 'toChannel')
      },

      cancel () {
        this.$emit('cancel', 'toChannel')
      },
      /*
       * 获取表单数据
       * @return string  格式:id=0&name=aa
       * */
      getFormData (data) {
        let myData = Util._.defaultsDeep({}, data)
        myData.type = data.type.join(',')
        return myData
      },
      //下一步
      next () {

        this.active = this.active + 1
      },
      load () {
        this.active = 0
      },

      closeChannel () {
        this.toChannelModal = false
      },
      //点击上传获取文件回调函数
      handleSelectedFile (convertedData) {
        if (convertedData.body == 0) {
          this.errorMess('导入数据为空，请重新选择数据')
          return
        }
        console.log(this.convertedData)
        this.convertedData = convertedData
        this.toChannelModal = true
      },

      //导入成功回调函数
      subHandelEvent (data) {
        this.closeChannel()
        this.totalNumber += data.length
      },

    },
    components: {
    },

  }
</script>
<style lang="scss">
  .el-button--primary{
      background: #11A63F;
      border-color:#11A63F;
      color:#fff;
  }
  .el-button--primary:hover{
      background: #11A63F;
      border-color:#11A63F;
      color:#fff;
  }
  .line{
     margin-bottom: 5px;
  }
  .linebot{
     margin: 5px 0 16px 0;
  }
</style>

